$(document).ready(function () {
	loadEmaForm();
});

// Globale Variable, um den letzten Update-Zeitpunkt zu speichern
var lastUpdateTime = 0;

function updateDaxValue(data) {
	var now = Date.now();

	// Prüfen, ob seit dem letzten Update mindestens 1 Sekunde vergangen ist
	if (now - lastUpdateTime >= 1000) {
		try {
			var parsedData = JSON.parse(data);
			if (parsedData.SYMBOL === "GER30") {
				$('#daxValue').fadeOut('fast', function () {
					$(this).text(parsedData.ASK).fadeIn('fast');
				});

				// Update-Zeitpunkt aktualisieren
				lastUpdateTime = now;
			}
		} catch (e) {
			console.error('Error parsing message:', e);
		}
	}
}

function post_ema(strategyValue, server_id) {
	//log
	console.log(strategyValue);

	$.ajax({
		url: 'ajax/post.php', // Die URL, an die die Anfrage gesendet wird
		type: 'POST', // Die Art der Anfrage
		data: { 'strategy_value': strategyValue, 'server_id': server_id }, // Die Daten, die gesendet werden sollen
		success: function (data) {
			// Aufruf der after_post_ema Funktion mit der Serverantwort
			after_post_ema(data);
			loadEmaForm();
		},
		error: function (xhr, status, error) {
			// Im Fehlerfall, erstelle ein JSON-Objekt mit einer Fehlermeldung und rufe after_post_ema auf
			after_post_ema(JSON.stringify({ error: 'Ein Fehler ist aufgetreten: ' + error }));
		}
	});
}

function loadEmaForm() {
	// Zeige den Loader an
	$('#formEmaContainer .dimmer').addClass('active');
	$.ajax({
		url: 'inc/ema_form.php',
		type: 'GET',
		success: function (data) {
			// Verstecke den Loader
			$('#formEmaContainer .dimmer').removeClass('active');

			// Füge die geladenen Daten in den Container ein
			$('#formEmaContainer').html(data);
		},
		error: function (err) {
			// Verstecke den Loader auch im Fehlerfall
			$('#formEmaContainer .dimmer').removeClass('active');

			console.error('Fehler beim Laden der Daten:', err);
			// Optional: Zeige eine Fehlermeldung im UI an
			$('#formEmaContainer').html('<div class="ui error message">Fehler beim Laden des Inhalts.</div>');
		}
	});
}


function after_post_ema(json) {
	//log json in console.log
	console.log(json);
	// Überprüfe, ob json gültig ist
	if (!json) {
		// Wenn kein json vorhanden ist, zeige eine Fehlermeldung an
		$('#message').toast({
			class: 'red',
			title: 'Keine Daten erhalten',
			position: 'top center'
		});
		return; // Beende die Funktion frühzeitig
	}

	try {
		// Versuche, json aufzulösen
		json = JSON.parse(json);
	} catch (e) {
		// Wenn json nicht aufgelöst werden kann, zeige eine Fehlermeldung an
		$('#message').toast({
			class: 'red',
			title: json,
			position: 'top center'
		});
		return; // Beende die Funktion frühzeitig
	}

	// Wenn json ein Fehler enthält, zeige die Fehlermeldung an
	if (json.error) {
		$('#message').toast({
			class: 'red',
			title: json.error,
			position: 'top center'
		});
	} else {
		// Sonst zeige die Nachricht aus json an
		$('#message').toast({
			class: 'info',
			title: json.message,
			position: 'top center'
		});
	}
}
	
function after_start_strategy(json) {
	console.log(json);
	after_post_ema(json);
	loadEmaForm();
}

