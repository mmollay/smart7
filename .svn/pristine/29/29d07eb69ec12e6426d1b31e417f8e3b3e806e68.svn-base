<?php
include ('../login/config_main.inc.php');

/**
 * *****************************************
 * Pfade für die Erzeugung der Configdateien
 * *****************************************
 */
$company_id = 1;
$path_www = "/var/www";
$path_etc_letsencrypt_live = "/etc/letsencrypt/live/";
$path_apache_config = "/etc/apache2/sites-available/";

echo "<pre>";
fu_virtualhost_generator($company_id, 'smart_sites.conf');
echo "</pre>";

/**
 * ******************************************************
 * Erzeugt eine Datei - VirtualHost und ladet die Apache-Conf neu
 * Martin Mollay am 16.02.2018
 * ******************************************************
 */
function fu_virtualhost_generator($company_id, $config_name)
{
    global $path_apache_config;
    $document_root = "/var/www/ssi";

    // Auslesen von Matchcode für die Erzeugung der Struktur (DIR)
    $company = call_company_option_single($company_id, 'matchcode');

    $query_domain = $GLOBALS['mysqli']->query("SELECT * FROM ssi_company.domain WHERE company_id = '$company_id' ") or die(mysqli_error($GLOBALS['mysqli']));
    while ($array = mysqli_fetch_array($query_domain)) {

        $domain_alias = array();
        $domain_id = $array['domain_id'];
        $page_id = $array['page_id'];
        $user_id = $array['user_id'];
        $domain = $array['domain'];
        $page_locked = $array['locked'];
        $set_ssl = $array['set_ssl'];
        $documentRoot = $document_root . "/smart_users/$company/user$user_id/page$page_id";

        $host = $array['domain'];
        preg_match("/[^\.\/]+\.[^\.\/]+$/", $host, $matches);

        if ($matches[0] == 'ssi.at')
            $wildcard = $matches[0];
        else
            $wildcard = $matches[0];

        // Aliases aufrufen
        $query = $GLOBALS['mysqli']->query("SELECT * FROM ssi_company.domain WHERE parent_id = '$domain_id' ") or die(mysqli_error($GLOBALS['mysqli']));
        while ($fetch_alias = mysqli_fetch_array($query)) {
            $domain_alias[] = $fetch_alias['domain'];
        }

        if ($page_locked)
            $documentRoot = '';

        // Erzeugt ein Config_file
        $config_file_data .= template_virtual_conf($documentRoot, $domain, $domain_alias, $set_ssl, $wildcard);
    }

    exec("touch $path_apache_config$config_name");

    if (! $virtual_conf) {
        $virtual_conf = "# Is automatically generated by SmartKit\n";
        $virtual_conf .= "# Date:" . date('m/d/Y h:i:s a', time()) . "\n";
    }

    file_put_contents("$path_apache_config$config_name", $virtual_conf . $config_file_data) or die("Unable to write file!");

    // cron_job_befehl ( "/etc/init.d/apache2 reload" );
}

// Schritt 1:

// Erzeugen eines Zertifikates
// certbot --email office@ssi.at --agree-tos -d *.powerhost.at -d powerhost.at

// Schritt 2:
// Vorlage für die Domain mit SSL + Weiterleitungen
// Wildcard!!!
function template_virtual_conf($DocumentRoot, $domain, $array_alisas = false, $set_ssl = false, $wildcard = false)
{
    global $path_etc_letsencrypt_live;
    
    {
        if ($array_alisas and ! is_array($array_alisas)) {
            $array_alisas = array(
                $array_alisas
            );
        }

        if (is_array($array_alisas)) {

            foreach ($array_alisas as $alias_domain) {
                $alias_domain = trim($alias_domain);
                $add_alias .= "\n\tServerAlias www.$alias_domain";
                $add_alias .= "\n\tServerAlias $alias_domain";
                $add_RewriteCond .= "\n\tRewriteCond %{SERVER_NAME} =www.$alias_domain [OR]";
                $add_RewriteCond .= "\n\tRewriteCond $alias_domain [OR]";
            }
        }
    }

    $virtual_conf .= "
    <VirtualHost *:80>
        ServerName www.$domain
        ServerAlias $domain " . $add_alias . "
        RewriteEngine on
        RewriteCond %{SERVER_NAME} =www.$domain [OR] " . $add_RewriteCond . "
        RewriteCond %{SERVER_NAME} =$domain
        RewriteRule ^ https://www.$domain%{REQUEST_URI} [END,QSA,R=permanent]
    </VirtualHost>";

    if ($set_ssl) {

        /**
         * *****************************************
         * CHECK ssi-zertificat
         * generate zertificat
         * *****************************************
         */
        if (! file_exists("$path_etc_letsencrypt_live/$domain")) {
            cron_job_befehl("/root/bin/certbot_generator $domain");
            
        } 

        if (! file_exists("$path_etc_letsencrypt_live/www.$domain")) {
            cron_job_befehl("/root/bin/certbot_generator www.$domain");
        } 
    
        if ($wildcard) {
            $ssl_domain = $wildcard;
            $add_info_wildcard = "# wildcard from $wildcard";
        } else {
            $ssl_domain = $domain;
            $add_info_wildcard = '';
        }

        $virtual_conf .= "
        <IfModule mod_ssl.c>
        <VirtualHost *:443>
            ServerName www.$domain
            DocumentRoot {%PATH%}
            CustomLog /var/log/apache2/$domain combined
            Include /etc/letsencrypt/options-ssl-apache.conf
            SSLCertificateFile /etc/letsencrypt/live/$domain/fullchain.pem
            SSLCertificateKeyFile /etc/letsencrypt/live/$domain/privkey.pem
        </VirtualHost>
        <VirtualHost *:443>
            ServerName $domain
            RewriteEngine on
            RewriteCond %{SERVER_NAME} =www.$domain
            RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,QSA,R=permanent]
            Include /etc/letsencrypt/options-ssl-apache.conf
            SSLCertificateFile /etc/letsencrypt/live/www.$domain/fullchain.pem
            SSLCertificateKeyFile /etc/letsencrypt/live/www.$domain/privkey.pem
        </VirtualHost>
        </IfModule>
    ";
    }
    return $virtual_conf;
}


// prueft ob cron_job-befehl schon vorhanden ist
function cron_job_befehl($befehl, $no_check = FALSE) {
    $cron_file = '/var/www/ssi/cron/cron_file.txt';
    
    if (! is_file ( $cron_file )) {
        exec ( "mkdir /var/www/ssi/cron" );
        exec ( "touch $cron_file" );
        return;
    }
    
    if (! $befehl)
        return;
        
        // remove /etc/init.d/apache2 reload
        $content = file_get_contents ( $cron_file );
        $content = preg_replace ( '[/etc/init.d/apache2 reload\n]', '', $content );
        
        file_put_contents ( $cron_file, $content );
        
        if (! $no_check) { // Wenn $check = 1 dann wird nicht ueberprueft ob Eintrag gebreits vorhanden ist
            
            if (file_exists ( $cron_file ))
                $lines2 = file ( $cron_file );
                else
                    die ( "Pfad $cron_file existiert nicht" );
                    
                    foreach ( $lines2 as $line_num => $line ) {
                        if (preg_match ( "[$befehl]", $line )) {
                            $no_reload_value = TRUE;
                        }
                    }
        }
        
        if (! $no_reload_value) {
            $fp2 = fopen ( $cron_file, "a+" );
            fwrite ( $fp2, "$befehl\n" );
            fclose ( $fp2 );
            $info_text = $str999AdmMsgReload[1];
        } else
            return TRUE; // wenn Befehl vorhanden
}

//echo "<pre>" . template('/var/www', 'ssi.at', 'wnn.at') . "</pre>";